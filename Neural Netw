import tensorflow as tf
from tensorflow import keras

(train_images, train_labels), (test_images, test_labels) = keras.datasets.fashion_mnist.load_data()

x_train = train_images.reshape(train_images.shape[0],28,28,1)
x_test = test_images.reshape(test_images.shape[0],28,28,1)

x_train = x_train.astype('float32') / 255.
x_test = x_test.astype('float32') / 255.

y_train = keras.utils.to_categorical(train_labels, 10)
y_test = keras.utils.to_categorical(test_labels, 10)

input_shape = (28,28,1)
model = keras.Sequential()
#Convolutional layers
model.add(keras.layers.Conv2D(32,kernel_size = (3,3), activation = 'relu', input_shape=input_shape))
model.add(keras.layers.Conv2D(64,kernel_size = (3,3), activation = 'relu'))
model.add(keras.layers.MaxPooling2D(pool_size=(2, 2)))
model.add(keras.layers.Dropout(0.25))
#Unidimensional model
model.add(keras.layers.Flatten())
#hidden layer 128 nodes
model.add(keras.layers.Dense(128, activation = 'relu'))
#Dropout layer ocassionaly 50% info is dropped
model.add(keras.layers.Dropout(0.5))
#output layer 10 outputs
model.add(keras.layers.Dense(10, activation = 'softmax'))
model.summary()

model.compile(optimizer ="adam", loss = 'categorical_crossentropy', metrics = ['accuracy'])

model.fit(x_train, y_train,batch_size = 128 ,epochs=3 , verbose = 1, validation_data= (x_test , y_test) )

score = model.evaluate(x_test, y_test, verbose = 0)
score
